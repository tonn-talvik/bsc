program example;

type
  TComplex = record
    a: integer;
    b: integer;
  end;

var
  C1, C2: TComplex;
  L1, L2, L3: integer;
  I: integer;
  X, Y: integer;
  A: array[10] of integer;

function sqrt(X: integer): integer;
begin
  writeln("undefined");
end;

procedure foo(X: integer, Y: integer, Z: integer);
begin
  writeln("undefined");
end;

begin
  C1.a := 4;
  C1.b := 3;

  X := C1.a;
  Y := C1.b;
  if X > Y then
  begin
    C2.a := 5;
    C2.b := readln();
  end else begin
    C2.a := readln();
    C2.b := 12;
  end;

  L1 := sqrt(C1.a * C1.a + C1.b * C1.b);
  L2 := sqrt(C2.a * C2.a + C2.b * C2.b);

  L3 := sqrt((C2.a - C1.a) * (C2.a - C1.a) + 
             (C2.b - C1.b) * (C2.b - C1.b));
  
  for I := 1 to L3 do
  begin
    if I < L2 then
      X := 5
    else
      X := 4;
    if X < 10 then
    begin
      break;
    end;
    foo(X, Y, A[I]);
  end;
end.
